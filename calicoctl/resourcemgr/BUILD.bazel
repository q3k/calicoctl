load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "bgpconfig.go",
        "bgppeer.go",
        "clusterinfo.go",
        "doc.go",
        "felixconfig.go",
        "globalnetworkpolicy.go",
        "globalnetworkset.go",
        "hostendpoint.go",
        "ippool.go",
        "networkpolicy.go",
        "node.go",
        "profile.go",
        "resourcemgr.go",
        "workloadendpoint.go",
    ],
    importpath = "github.com/projectcalico/calicoctl/calicoctl/resourcemgr",
    visibility = ["//visibility:public"],
    deps = [
        "//calicoctl/commands/argutils:go_default_library",
        "//calicoctl/util/yaml:go_default_library",
        "//vendor/github.com/projectcalico/go-yaml-wrapper:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/apis/v3:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/backend/k8s/conversion:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/clientv3:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/errors:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/options:go_default_library",
        "//vendor/github.com/projectcalico/libcalico-go/lib/validator/v3:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["resourcemgr_suite_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/ginkgo/reporters:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
    ],
)
